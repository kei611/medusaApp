name: CD Pipeline to EC2 (No CI Phase)

on:
  push:
    branches:
      - main # main „Éñ„É©„É≥„ÉÅ„Å∏„ÅÆ„Éó„ÉÉ„Ç∑„É•„Åß„Éà„É™„Ç¨„Éº

env:
  # Áí∞Â¢ÉÂ§âÊï∞ (GitHub Secrets „Çí‰ΩøÁî®„Åô„Çã„Åì„Å®„ÇíÂº∑„ÅèÊé®Â•®)
  EC2_HOST: ${{ secrets.EC2_HOST }} # EC2„ÅÆ„Éë„Éñ„É™„ÉÉ„ÇØIP„Åæ„Åü„ÅØDNSÂêç
  EC2_USER: ec2-user # EC2„ÅÆ„É¶„Éº„Ç∂„ÉºÂêç (‰æã: Amazon Linux„ÅØec2-user)
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }} # EC2Êé•Á∂öÁî®„ÅÆSSHÁßòÂØÜÈçµ

  # Medusa Backend „ÅÆÁí∞Â¢ÉÂ§âÊï∞ (EC2‰∏ä„ÅÆ.env„Å´Êõ∏„ÅçËæº„ÇÄÁî®)
  DB_URL: ${{ secrets.DATABASE_URL }}
  RD_URL: ${{ secrets.REDIS_URL }}
  STORE_CORS_ORIGINS: ${{ secrets.STORE_CORS }}
  ADMIN_CORS_ORIGINS: ${{ secrets.ADMIN_CORS }}
  AUTH_CORS_ORIGINS: ${{ secrets.AUTH_CORS }}
  S3_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
  S3_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
  S3_BASE: ${{ secrets.S3_BASE_URL }}
  JWT: ${{ secrets.JWT_SECRET }}
  COOKIE: ${{ secrets.COOKIE_SECRET }}
  # ... „Åù„ÅÆ‰ªñÂøÖË¶Å„Å™MedusaÁí∞Â¢ÉÂ§âÊï∞
  # Next.js „Çπ„Éà„Ç¢„Éï„É≠„É≥„Éà„ÅÆÁí∞Â¢ÉÂ§âÊï∞ (EC2‰∏ä„ÅÆ.env„Å´Êõ∏„ÅçËæº„ÇÄÁî®)
  MEDUSA_BACKEND_URL: ${{ secrets.MEDUSA_BACKEND_URL }}
  NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY }}
  NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
  NEXT_PUBLIC_DEFAULT_REGION: ${{ secrets.NEXT_PUBLIC_DEFAULT_REGION }}
  NEXT_PUBLIC_STRIPE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_KEY }}
  REVALIDATE_SECRET: ${{ secrets.REVALIDATE_SECRET }}
  NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
  NEXT_PUBLIC_SANITY_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_DATASET }}
  NEXT_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
  # ... „Åù„ÅÆ‰ªñÂøÖË¶Å„Å™Next.jsÁí∞Â¢ÉÂ§âÊï∞

# ... ÁúÅÁï•„Åï„Çå„ÅüÂÜíÈ†≠ÈÉ®ÂàÜ„ÅØÂ§âÊõ¥„Å™„Åó ...

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            PROJECT_DIR="/home/${{ env.EC2_USER }}/medusaApp"
            cd ${PROJECT_DIR}

            echo "üì¶ Pulling latest code..."
            git pull origin main

            # .env for Medusa Backend
            echo "‚öôÔ∏è Writing .env for Medusa Backend..."
            cat << EOF > ./my-store/.env
            NODE_ENV=production
            DATABASE_URL=${{ env.DB_URL }}
            JWT_SECRET=${{ env.JWT }}
            COOKIE_SECRET=${{ env.COOKIE }}
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
            STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}
            STORE_CORS=${{ env.STORE_CORS_ORIGINS }}
            ADMIN_CORS=${{ env.ADMIN_CORS_ORIGINS }}
            S3_ACCESS_KEY_ID=${{ env.S3_ID }}
            S3_SECRET_ACCESS_KEY=${{ env.S3_KEY }}
            FILESYSTEM_DRIVER=${{ secrets.FILESYSTEM_DRIVER }}
            S3_BASE_URL=${{ env.S3_BASE }}
            MEDUSA_ADMIN_PATH=/app
            DISABLE_MEDUSA_ADMIN=false
            MEDUSA_BACKEND_URL=${{ env.MEDUSA_BACKEND_URL }}
            EOF

            echo "‚úÖ .env created"

            # Medusa Backend: Build & Run
            echo "üöÄ Deploying Medusa Backend..."
            cd my-store
            npm install
            npm run build
            npm run migrate
            pm2 delete medusa-backend || true
            pm2 start --name medusa-backend npm -- start
            pm2 save
            cd ..

            # .env.local for Storefront
            echo "‚öôÔ∏è Writing .env.local for Storefront..."
            cat << EOF > ./my-store-storefront/.env.local
            MEDUSA_BACKEND_URL=${{ env.MEDUSA_BACKEND_URL }}
            NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY=${{ env.NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY }}
            NEXT_PUBLIC_BASE_URL=${{ env.NEXT_PUBLIC_BASE_URL }}
            NEXT_PUBLIC_DEFAULT_REGION=${{ env.NEXT_PUBLIC_DEFAULT_REGION }}
            NEXT_PUBLIC_STRIPE_KEY=${{ env.NEXT_PUBLIC_STRIPE_KEY }}
            REVALIDATE_SECRET=${{ env.REVALIDATE_SECRET }}
            NEXT_PUBLIC_SANITY_PROJECT_ID=${{ env.NEXT_PUBLIC_SANITY_PROJECT_ID }}
            NEXT_PUBLIC_SANITY_DATASET=${{ env.NEXT_PUBLIC_SANITY_DATASET }}
            EOF

            echo "‚úÖ .env.local created"

            # Storefront: Build & PM2 Run with cwd
            echo "üöÄ Deploying Next.js Storefront..."
            cd my-store-storefront
            npm install --production=false
            npm run build
            pm2 delete medusa-storefront || true
            pm2 start --name "medusa-storefront" npm -- start
            pm2 save

            echo "üéâ Deployment finished!"
